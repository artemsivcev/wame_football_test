// Mocks generated by Mockito 5.4.4 from annotations
// in wame_football_test/test/domain/player_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:wame_football_test/data/models/player_statistics_response_model.dart'
    as _i4;
import 'package:wame_football_test/data/providers/player_api_provider.dart'
    as _i5;
import 'package:wame_football_test/data/providers/player_storage_provider.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PlayerStorageProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlayerStorageProvider extends _i1.Mock
    implements _i2.PlayerStorageProvider {
  MockPlayerStorageProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveData(
          List<_i4.PlayerStatisticsResponseModel>? playersAndStatistics) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveData,
          [playersAndStatistics],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.PlayerStatisticsResponseModel>> getData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getData,
          [],
        ),
        returnValue: _i3.Future<List<_i4.PlayerStatisticsResponseModel>>.value(
            <_i4.PlayerStatisticsResponseModel>[]),
      ) as _i3.Future<List<_i4.PlayerStatisticsResponseModel>>);

  @override
  _i3.Future<DateTime> getLastUpdated() => (super.noSuchMethod(
        Invocation.method(
          #getLastUpdated,
          [],
        ),
        returnValue: _i3.Future<DateTime>.value(_FakeDateTime_0(
          this,
          Invocation.method(
            #getLastUpdated,
            [],
          ),
        )),
      ) as _i3.Future<DateTime>);

  @override
  _i3.Future<bool> isExpired() => (super.noSuchMethod(
        Invocation.method(
          #isExpired,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [PlayerApiProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlayerApiProvider extends _i1.Mock implements _i5.PlayerApiProvider {
  MockPlayerApiProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PlayerStatisticsResponseModel>> fetchPlayers() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPlayers,
          [],
        ),
        returnValue: _i3.Future<List<_i4.PlayerStatisticsResponseModel>>.value(
            <_i4.PlayerStatisticsResponseModel>[]),
      ) as _i3.Future<List<_i4.PlayerStatisticsResponseModel>>);
}
